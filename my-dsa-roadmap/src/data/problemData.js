
export function getLeetCodeProblems(nodeId) {
  const problems = {
    arrays: [ { name: "1. Two Sum", difficulty: "Easy" }, { name: "26. Remove Duplicates from Sorted Array", difficulty: "Easy" }, { name: "27. Remove Element", difficulty: "Easy" }, { name: "35. Search Insert Position", difficulty: "Easy" }, { name: "53. Maximum Subarray", difficulty: "Medium" }, { name: "66. Plus One", difficulty: "Easy" }, { name: "88. Merge Sorted Array", difficulty: "Easy" }, { name: "118. Pascal's Triangle", difficulty: "Easy" }, { name: "119. Pascal's Triangle II", difficulty: "Easy" }, { name: "121. Best Time to Buy and Sell Stock", difficulty: "Easy" }, { name: "122. Best Time to Buy and Sell Stock II", difficulty: "Medium" }, { name: "136. Single Number", difficulty: "Easy" }, { name: "169. Majority Element", difficulty: "Easy" }, { name: "217. Contains Duplicate", difficulty: "Easy" }, { name: "219. Contains Duplicate II", difficulty: "Easy" }, { name: "268. Missing Number", difficulty: "Easy" }, { name: "283. Move Zeroes", difficulty: "Easy" }, { name: "414. Third Maximum Number", difficulty: "Easy" }, { name: "448. Find All Numbers Disappeared in an Array", difficulty: "Easy" }, { name: "485. Max Consecutive Ones", difficulty: "Easy" }, { name: "15. 3Sum", difficulty: "Medium" }, { name: "11. Container With Most Water", difficulty: "Medium" }, { name: "238. Product of Array Except Self", difficulty: "Medium" }, { name: "42. Trapping Rain Water", difficulty: "Hard" }, { name: "4. Median of Two Sorted Arrays", difficulty: "Hard" } ],
    hashing: [ { name: "1. Two Sum", difficulty: "Easy" }, { name: "217. Contains Duplicate", difficulty: "Easy" }, { name: "242. Valid Anagram", difficulty: "Easy" }, { name: "49. Group Anagrams", difficulty: "Medium" }, { name: "128. Longest Consecutive Sequence", difficulty: "Medium" }, { name: "387. First Unique Character in a String", difficulty: "Easy" }, { name: "3. Longest Substring Without Repeating Characters", difficulty: "Medium" }, { name: "36. Valid Sudoku", difficulty: "Medium" }, { name: "202. Happy Number", difficulty: "Easy" }, { name: "290. Word Pattern", difficulty: "Easy" }, { name: "349. Intersection of Two Arrays", difficulty: "Easy" }, { name: "350. Intersection of Two Arrays II", difficulty: "Easy" }, { name: "599. Minimum Index Sum of Two Lists", difficulty: "Easy" }, { name: "771. Jewels and Stones", difficulty: "Easy" }, { name: "13. Roman to Integer", difficulty: "Easy" }, { name: "454. 4Sum II", difficulty: "Medium" }, { name: "380. Insert Delete GetRandom O(1)", difficulty: "Medium" }, { name: "447. Number of Boomerangs", difficulty: "Medium" }, { name: "49. Group Anagrams", difficulty: "Medium" } ],
    hashmap: [ { name: "1. Two Sum", difficulty: "Easy" }, { name: "217. Contains Duplicate", difficulty: "Easy" }, { name: "242. Valid Anagram", difficulty: "Easy" }, { name: "383. Ransom Note", difficulty: "Easy"}, { name: "205. Isomorphic Strings", difficulty: "Easy"}, { name: "49. Group Anagrams", difficulty: "Medium" }, { name: "128. Longest Consecutive Sequence", difficulty: "Medium" }, { name: "387. First Unique Character in a String", difficulty: "Easy" }, { name: "3. Longest Substring Without Repeating Characters", difficulty: "Medium" }, { name: "36. Valid Sudoku", difficulty: "Medium" }, { name: "454. 4Sum II", difficulty: "Medium" }, { name: "380. Insert Delete GetRandom O(1)", difficulty: "Medium" } ],
    trees: [ { name: "94. Binary Tree Inorder Traversal", difficulty: "Easy" }, { name: "100. Same Tree", difficulty: "Easy" }, { name: "101. Symmetric Tree", difficulty: "Easy" }, { name: "104. Maximum Depth of Binary Tree", difficulty: "Easy" }, { name: "108. Convert Sorted Array to Binary Search Tree", difficulty: "Easy" }, { name: "110. Balanced Binary Tree", difficulty: "Easy" }, { name: "111. Minimum Depth of Binary Tree", difficulty: "Easy" }, { name: "112. Path Sum", difficulty: "Easy" }, { name: "144. Binary Tree Preorder Traversal", difficulty: "Easy" }, { name: "145. Binary Tree Postorder Traversal", difficulty: "Easy" }, { name: "226. Invert Binary Tree", difficulty: "Easy" }, { name: "257. Binary Tree Paths", difficulty: "Easy" }, { name: "572. Subtree of Another Tree", difficulty: "Easy" }, { name: "102. Binary Tree Level Order Traversal", difficulty: "Medium" }, { name: "98. Validate Binary Search Tree", difficulty: "Medium" }, { name: "230. Kth Smallest Element in a BST", difficulty: "Medium" }, { name: "199. Binary Tree Right Side View", difficulty: "Medium" }, { name: "105. Construct Binary Tree from Preorder and Inorder Traversal", difficulty: "Medium" }, { name: "124. Binary Tree Maximum Path Sum", difficulty: "Hard" }, { name: "297. Serialize and Deserialize Binary Tree", difficulty: "Hard" }, { name: "236. Lowest Common Ancestor of a Binary Tree", difficulty: "Medium" } ],
    dynamic: [ { name: "53. Maximum Subarray", difficulty: "Medium" }, { name: "70. Climbing Stairs", difficulty: "Easy" }, { name: "121. Best Time to Buy and Sell Stock", difficulty: "Easy" }, { name: "198. House Robber", difficulty: "Medium" }, { name: "213. House Robber II", difficulty: "Medium" }, { name: "300. Longest Increasing Subsequence", difficulty: "Medium" }, { name: "1143. Longest Common Subsequence", difficulty: "Medium" }, { name: "139. Word Break", difficulty: "Medium" }, { name: "322. Coin Change", difficulty: "Medium" }, { name: "5. Longest Palindromic Substring", difficulty: "Medium" }, { name: "62. Unique Paths", difficulty: "Medium" }, { name: "63. Unique Paths II", difficulty: "Medium" }, { name: "64. Minimum Path Sum", difficulty: "Medium" }, { name: "91. Decode Ways", difficulty: "Medium" }, { name: "152. Maximum Product Subarray", difficulty: "Medium" }, { name: "279. Perfect Squares", difficulty: "Medium" }, { name: "416. Partition Equal Subset Sum", difficulty: "Medium" }, { name: "518. Coin Change II", difficulty: "Medium" }, { name: "72. Edit Distance", difficulty: "Hard" }, { name: "10. Regular Expression Matching", difficulty: "Hard" } ],
    search: [ { name: "704. Binary Search", difficulty: "Easy" }, { name: "35. Search Insert Position", difficulty: "Easy" }, { name: "278. First Bad Version", difficulty: "Easy" }, { name: "374. Guess Number Higher or Lower", difficulty: "Easy" }, { name: "33. Search in Rotated Sorted Array", difficulty: "Medium" }, { name: "153. Find Minimum in Rotated Sorted Array", difficulty: "Medium" }, { name: "74. Search a 2D Matrix", difficulty: "Medium" }, { name: "34. Find First and Last Position of Element in Sorted Array", difficulty: "Medium" }, { name: "162. Find Peak Element", difficulty: "Medium" }, { name: "81. Search in Rotated Sorted Array II", difficulty: "Medium" }, { name: "4. Median of Two Sorted Arrays", difficulty: "Hard" } ],
    binary: [ { name: "704. Binary Search", difficulty: "Easy" }, { name: "35. Search Insert Position", difficulty: "Easy" }, { name: "278. First Bad Version", difficulty: "Easy" }, { name: "374. Guess Number Higher or Lower", difficulty: "Easy" }, { name: "33. Search in Rotated Sorted Array", difficulty: "Medium" }, { name: "153. Find Minimum in Rotated Sorted Array", difficulty: "Medium" }, { name: "74. Search a 2D Matrix", difficulty: "Medium" }, { name: "34. Find First and Last Position of Element in Sorted Array", difficulty: "Medium" }, { name: "162. Find Peak Element", difficulty: "Medium" }, { name: "81. Search in Rotated Sorted Array II", difficulty: "Medium" }, { name: "875. Koko Eating Bananas", difficulty: "Medium"}, { name: "240. Search a 2D Matrix II", difficulty: "Medium"}, { name: "4. Median of Two Sorted Arrays", difficulty: "Hard" } ],
    twoptr: [ { name: "125. Valid Palindrome", difficulty: "Easy" }, { name: "283. Move Zeroes", difficulty: "Easy" }, { name: "344. Reverse String", difficulty: "Easy" }, { name: "167. Two Sum II - Input Array Is Sorted", difficulty: "Medium" }, { name: "15. 3Sum", difficulty: "Medium" }, { name: "11. Container With Most Water", difficulty: "Medium" }, { name: "19. Remove Nth Node From End of List", difficulty: "Medium" }, { name: "876. Middle of the Linked List", difficulty: "Easy" }, { name: "141. Linked List Cycle", difficulty: "Easy" }, { name: "16. 3Sum Closest", difficulty: "Medium" }, { name: "75. Sort Colors", difficulty: "Medium" }, { name: "42. Trapping Rain Water", difficulty: "Hard" } ],
    sliding: [ { name: "3. Longest Substring Without Repeating Characters", difficulty: "Medium" }, { name: "76. Minimum Window Substring", difficulty: "Hard" }, { name: "209. Minimum Size Subarray Sum", difficulty: "Medium" }, { name: "239. Sliding Window Maximum", difficulty: "Hard" }, { name: "424. Longest Repeating Character Replacement", difficulty: "Medium" }, { name: "438. Find All Anagrams in a String", difficulty: "Medium" }, { name: "567. Permutation in String", difficulty: "Medium" }, { name: "643. Maximum Average Subarray I", difficulty: "Easy" }, { name: "1004. Max Consecutive Ones III", difficulty: "Medium" }, { name: "340. Longest Substring with At Most K Distinct Characters", difficulty: "Hard"}, { name: "904. Fruit Into Baskets", difficulty: "Medium"} ],
    bfs: [ { name: "102. Binary Tree Level Order Traversal", difficulty: "Medium" }, { name: "103. Binary Tree Zigzag Level Order Traversal", difficulty: "Medium" }, { name: "107. Binary Tree Level Order Traversal II", difficulty: "Easy" }, { name: "111. Minimum Depth of Binary Tree", difficulty: "Easy" }, { name: "200. Number of Islands", difficulty: "Medium" }, { name: "127. Word Ladder", difficulty: "Hard" }, { name: "994. Rotting Oranges", difficulty: "Medium" }, { name: "542. 01 Matrix", difficulty: "Medium" }, { name: "133. Clone Graph", difficulty: "Medium" } ],
    dfs: [ { name: "104. Maximum Depth of Binary Tree", difficulty: "Easy" }, { name: "112. Path Sum", difficulty: "Easy" }, { name: "113. Path Sum II", difficulty: "Medium" }, { name: "129. Sum Root to Leaf Numbers", difficulty: "Medium" }, { name: "200. Number of Islands", difficulty: "Medium" }, { name: "695. Max Area of Island", difficulty: "Medium" }, { name: "417. Pacific Atlantic Water Flow", difficulty: "Medium" }, { name: "130. Surrounded Regions", difficulty: "Medium" }, { name: "547. Number of Provinces", difficulty: "Medium" }, { name: "399. Evaluate Division", difficulty: "Medium" }, { name: "51. N-Queens", difficulty: "Hard" } ],
    greedy: [ { name: "121. Best Time to Buy and Sell Stock", difficulty: "Easy" }, { name: "122. Best Time to Buy and Sell Stock II", difficulty: "Medium" }, { name: "55. Jump Game", difficulty: "Medium" }, { name: "45. Jump Game II", difficulty: "Medium" }, { name: "134. Gas Station", difficulty: "Medium" }, { name: "53. Maximum Subarray", difficulty: "Medium" }, { name: "881. Boats to Save People", difficulty: "Medium" }, { name: "455. Assign Cookies", difficulty: "Easy" }, { name: "435. Non-overlapping Intervals", difficulty: "Medium" }, { name: "605. Can Place Flowers", difficulty: "Easy" } ],
    backtrack: [ { name: "17. Letter Combinations of a Phone Number", difficulty: "Medium" }, { name: "22. Generate Parentheses", difficulty: "Medium" }, { name: "39. Combination Sum", difficulty: "Medium" }, { name: "40. Combination Sum II", difficulty: "Medium" }, { name: "46. Permutations", difficulty: "Medium" }, { name: "47. Permutations II", difficulty: "Medium" }, { name: "77. Combinations", difficulty: "Medium" }, { name: "78. Subsets", difficulty: "Medium" }, { name: "90. Subsets II", difficulty: "Medium" }, { name: "79. Word Search", difficulty: "Medium" }, { name: "51. N-Queens", difficulty: "Hard" }, { name: "37. Sudoku Solver", difficulty: "Hard" } ],
    stack: [ { name: "20. Valid Parentheses", difficulty: "Easy" }, { name: "155. Min Stack", difficulty: "Medium" }, { name: "739. Daily Temperatures", difficulty: "Medium" }, { name: "150. Evaluate Reverse Polish Notation", difficulty: "Medium" }, { name: "22. Generate Parentheses", difficulty: "Medium" }, { name: "84. Largest Rectangle in Histogram", difficulty: "Hard" }, { name: "496. Next Greater Element I", difficulty: "Easy" }, { name: "503. Next Greater Element II", difficulty: "Medium" }, { name: "853. Car Fleet", difficulty: "Medium" } ],
    queue: [ { name: "225. Implement Stack using Queues", difficulty: "Easy" }, { name: "933. Number of Recent Calls", difficulty: "Easy" }, { name: "232. Implement Queue using Stacks", difficulty: "Easy" }, { name: "622. Design Circular Queue", difficulty: "Medium" }, { name: "641. Design Circular Deque", difficulty: "Medium" }, { name: "200. Number of Islands", difficulty: "Medium" }, { name: "207. Course Schedule", difficulty: "Medium" }, { name: "239. Sliding Window Maximum", difficulty: "Hard" } ],
    heap: [ { name: "215. Kth Largest Element in an Array", difficulty: "Medium" }, { name: "295. Find Median from Data Stream", difficulty: "Hard" }, { name: "347. Top K Frequent Elements", difficulty: "Medium" }, { name: "973. K Closest Points to Origin", difficulty: "Medium" }, { name: "1046. Last Stone Weight", difficulty: "Easy" }, { name: "703. Kth Largest Element in a Stream", difficulty: "Easy" }, { name: "692. Top K Frequent Words", difficulty: "Medium" }, { name: "23. Merge k Sorted Lists", difficulty: "Hard" }, { name: "378. Kth Smallest Element in a Sorted Matrix", difficulty: "Medium" } ]
  };
  return problems[nodeId] || [];
}